version: '3.5'

# will contain all elasticsearch data.
volumes:
  elasticsearch1:
  elasticsearch2:
  elasticsearch3:


secrets:
  ca.crt:
    file: ./secrets/certificate_authority/ca/ca.crt
  elasticsearch.keystore:
    file: ./secrets/elasticsearch.keystore
  elastic-stack-ca.p12:
    file: ./secrets/certificate_authority/elastic-stack-ca.p12
  elasticsearch.key:
    file: ./secrets/certificates/elasticsearch/elasticsearch.key
  elasticsearch.cert:
    file: ./secrets/certificates/elasticsearch/elasticsearch.crt
  kibana.key:
    file: ./secrets/certificates/kibana/kibana.key
  kibana.cert:
    file: ./secrets/certificates/kibana/kibana.crt
  # logstash.pkcs8.key:
  #   file: ./secrets/certificates/logstash/logstash.pkcs8.key
  # logstash.key:
  #   file: ./secrets/certificates/logstash/logstash.key
  # logstash.p12:
  #   file: ./secrets/keystores/logstash/logstash.p12
  # logstash.cert:
  #   file: ./secrets/certificates/logstash/logstash.crt
  # filebeat.key:
  #   file: ./secrets/certificates/filebeat/filebeat.key
  # filebeat.cert:
  #   file: ./secrets/certificates/filebeat/filebeat.crt
  # metricbeat.key:
  #   file: ./secrets/certificates/metricbeat/metricbeat.key
  # metricbeat.cert:
  #   file: ./secrets/certificates/metricbeat/metricbeat.crt
  # packetbeat.key:
  #   file: ./secrets/certificates/packetbeat/packetbeat.key
  # packetbeat.cert:
  #   file: ./secrets/certificates/packetbeat/packetbeat.crt

services:
  # swag:
  #   image: linuxserver/swag
  #   container_name: swag
  #   cap_add:
  #     - NET_ADMIN
  #   environment:
  #     - PUID=2000
  #     - PGID=2000
  #     - TZ=${TIMEZONE}
  #     - URL=${DOMAIN}
  #     - SUBDOMAINS=${SUBDOMAIN}
  #     - VALIDATION=http
  #     - EMAIL=${EMAIL}
  #     - STAGING=false
  #   volumes:
  #     - ./swag:/config
  #   ports:
  #     - 443:443
  #     - 80:80
  #   restart: unless-stopped
  #   networks:
  #     - elk
  #   depends_on: 
  #     - elasticsearch
  #     - kibana

  elasticsearch1.elasticsearch:
    container_name: elasticsearch1.elasticsearch
    hostname: elasticsearch1.elasticsearch
    build:
      context: elasticsearch/
      args:
        ELK_VERSION: ${ELK_VERSION}
    restart: unless-stopped
    environment:
      node.name: elasticsearch1.elasticsearch
      CONFIG_DIR: ${ELASTIC_DIR}/config
      ELASTIC_USERNAME: ${ELASTIC_USERNAME}
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
      ES_JAVA_OPTS: -Xmx${ELASTICSEARCH_HEAP} -Xms${ELASTICSEARCH_HEAP}
      bootstrap.memory_lock: "true"
      # discovery.type: single-node
      discovery.seed_hosts: elasticsearch1.elasticsearch,elasticsearch2.elasticsearch,elasticsearch3.elasticsearch
      cluster.initial_master_nodes: elasticsearch1.elasticsearch,elasticsearch2.elasticsearch,elasticsearch3.elasticsearch
    volumes:
      - elasticsearch1:${ELASTIC_DIR}
      - ./.env:${ELASTIC_DIR}/utils/.env
      - ./elasticsearch/config/elasticsearch.yml:${ELASTIC_DIR}/config/elasticsearch.yml:ro
    secrets:
      - source: elasticsearch.keystore
        target: ${ELASTIC_DIR}/config/elasticsearch.keystore
      - source: ca.crt
        target: ${ELASTIC_DIR}/config/ca.crt
      - source: elasticsearch.cert
        target: ${ELASTIC_DIR}/config/elasticsearch.crt
      - source: elasticsearch.key
        target: ${ELASTIC_DIR}/config/elasticsearch.key
    expose:
      - 9200
      - 9300
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 200000
        hard: 200000
    networks:
      - elk

  elasticsearch2.elasticsearch:
    container_name: elasticsearch2.elasticsearch
    hostname: elasticsearch2.elasticsearch
    build:
      context: elasticsearch/
      args:
        ELK_VERSION: ${ELK_VERSION}
    restart: unless-stopped
    environment:
      node.name: elasticsearch2.elasticsearch
      CONFIG_DIR: ${ELASTIC_DIR}/config
      ELASTIC_USERNAME: ${ELASTIC_USERNAME}
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
      ES_JAVA_OPTS: -Xmx${ELASTICSEARCH_HEAP} -Xms${ELASTICSEARCH_HEAP}
      bootstrap.memory_lock: "true"
      # discovery.type: single-node
      discovery.seed_hosts: elasticsearch1.elasticsearch,elasticsearch2.elasticsearch,elasticsearch3.elasticsearch
      cluster.initial_master_nodes: elasticsearch1.elasticsearch,elasticsearch2.elasticsearch,elasticsearch3.elasticsearch
    volumes:
      - elasticsearch2:${ELASTIC_DIR}
      - ./.env:${ELASTIC_DIR}/utils/.env
      - ./elasticsearch/config/elasticsearch.yml:${ELASTIC_DIR}/config/elasticsearch.yml:ro
    secrets:
      - source: elasticsearch.keystore
        target: ${ELASTIC_DIR}/config/elasticsearch.keystore
      - source: ca.crt
        target: ${ELASTIC_DIR}/config/ca.crt
      - source: elasticsearch.cert
        target: ${ELASTIC_DIR}/config/elasticsearch.crt
      - source: elasticsearch.key
        target: ${ELASTIC_DIR}/config/elasticsearch.key
    expose:
      - 9200
      - 9300
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 200000
        hard: 200000
    networks:
      - elk

  elasticsearch3.elasticsearch:
    container_name: elasticsearch3.elasticsearch
    hostname: elasticsearch3.elasticsearch
    build:
      context: elasticsearch/
      args:
        ELK_VERSION: ${ELK_VERSION}
    restart: unless-stopped
    environment:
      node.name: elasticsearch3.elasticsearch
      CONFIG_DIR: ${ELASTIC_DIR}/config
      ELASTIC_USERNAME: ${ELASTIC_USERNAME}
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
      ES_JAVA_OPTS: -Xmx${ELASTICSEARCH_HEAP} -Xms${ELASTICSEARCH_HEAP}
      bootstrap.memory_lock: "true"
      # discovery.type: single-node
      discovery.seed_hosts: elasticsearch1.elasticsearch,elasticsearch2.elasticsearch,elasticsearch3.elasticsearch
      cluster.initial_master_nodes: elasticsearch1.elasticsearch,elasticsearch2.elasticsearch,elasticsearch3.elasticsearch
    volumes:
      - elasticsearch3:${ELASTIC_DIR}
      - ./.env:${ELASTIC_DIR}/utils/.env
      - ./elasticsearch/config/elasticsearch.yml:${ELASTIC_DIR}/config/elasticsearch.yml:ro
    secrets:
      - source: elasticsearch.keystore
        target: ${ELASTIC_DIR}/config/elasticsearch.keystore
      - source: ca.crt
        target: ${ELASTIC_DIR}/config/ca.crt
      - source: elasticsearch.cert
        target: ${ELASTIC_DIR}/config/elasticsearch.crt
      - source: elasticsearch.key
        target: ${ELASTIC_DIR}/config/elasticsearch.key
    expose:
      - 9200
      - 9300
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 200000
        hard: 200000
    networks:
      - elk

  kibana:
    container_name: kibana
    hostname: kibana
    build:
      context: kibana/
      args:
        ELK_VERSION: $ELK_VERSION
    restart: unless-stopped
    volumes:
      - ./kibana/config/kibana.yml:${KIBANA_DIR}/config/kibana.yml:ro
    environment:
      CONFIG_DIR: ${KIBANA_DIR}/config
      KIBANA_USERNAME: ${KIBANA_USERNAME}
      KIBANA_PASSWORD: ${KIBANA_PASSWORD}
      # ELASTIC_SERVICE_ACCOUNT_TOKEN: ${ELASTIC_SERVICE_ACCOUNT_TOKEN}
      ENCRYPTION_KEY: ${XPACK_ENCRYPTION_KEY}
      KIBANA_URL: ${KIBANA_URL}
    secrets:
      - source: ca.crt
        target: ${KIBANA_DIR}/config/ca.crt
      - source: kibana.cert
        target: ${KIBANA_DIR}/config/kibana.crt
      - source: kibana.key
        target: ${KIBANA_DIR}/config/kibana.key
    ports:
      - "5601:5601"
    networks:
      - elk
    depends_on:
      - elasticsearch1.elasticsearch

  heartbeat:
    container_name: heartbeat
    hostname: heartbeat
    build:
      context: heartbeat/
      args:
        ELK_VERSION: $ELK_VERSION
    command:
      # Log to stderr.
      - -e
      # Disable config file permissions checks. Allows mounting
      # 'config/heartbeat.yml' even if it's not owned by root.
      # see: https://www.elastic.co/guide/en/beats/libbeat/current/config-file-permissions.html
      - --strict.perms=false
    volumes:
      - ./heartbeat/config/heartbeat.yml:${HEARTBEAT_DIR}/heartbeat.yml:ro,Z
      - ./monitors.d:${HEARTBEAT_DIR}/monitors.d
    environment:
      CONFIG_DIR: ${HEARTBEAT_DIR}/config
      BEATS_USERNAME: ${ELASTIC_USERNAME}
      BEATS_PASSWORD: ${ELASTIC_PASSWORD}
    secrets:
      - source: ca.crt
        target: ${HEARTBEAT_DIR}/config/ca.crt
    networks:
      - elk
    depends_on:
      - elasticsearch1.elasticsearch

networks:
  elk:
    driver: bridge
